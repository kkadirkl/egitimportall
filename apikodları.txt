using Business.Abstract;
using Entities.Concrete;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace WebAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class LessonsController : ControllerBase
    {
        private ILessonService LessonService { get; }
        public LessonsController(ILessonService lessonService)
        {
            LessonService = lessonService;
        }

        [HttpPost("add")]
        public IActionResult Add([FromBody] Lesson lesson)
        {
            var result = LessonService.Add(lesson);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpDelete("delete")]
        public IActionResult Delete([FromBody] Lesson lesson)
        {
            var result = LessonService.Delete(lesson);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpPut("update")]
        public IActionResult Update([FromBody] Lesson lesson)
        {
            var result = LessonService.Update(lesson);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpGet("get-lessons")]
        public IActionResult GetLessons()
        {
            var result = LessonService.GetLessons();
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpGet("get-by-lesson-id/{lessonId}")]
        public IActionResult GetByLessonId(int lessonId)
        {
            var result = LessonService.GetByLessonId(lessonId);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }
    }
}

using Business.Abstract;
using Entities.Dtos;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace WebAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class AuthenticationController : ControllerBase
    {
        private IAuthenticationService AuthenticationService { get; }

        public AuthenticationController(IAuthenticationService authenticationService)
        {
            AuthenticationService = authenticationService;
        }

        [HttpPost("login")]
        public IActionResult Login([FromBody] UserForLoginDto userForLoginDto)
        {
            var result = AuthenticationService.Login(userForLoginDto);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpPost("register")]
        public IActionResult Register([FromBody] UserForRegisterDto userForRegisterDto)
        {
            var result = AuthenticationService.Register(userForRegisterDto);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }


    }
}
using Business.Abstract;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace API.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class UsersController : ControllerBase
    {
        private IUserService UserService { get; }

        public UsersController(IUserService userService)
        {
            UserService = userService;
        }

        [HttpGet("get-all")]
        public IActionResult GetAll()
        {
            var result = UserService.GetAll();
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }
    }
}
using Business.Abstract;
using Core.Entities.Concrete;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace WebAPI.Controllers
{
[Route("api/[controller]")]
[ApiController]
public class UserOperationClaimsController : ControllerBase
{
private IUserOperationClaimService UserOperationClaimService { get; }

public UserOperationClaimsController(IUserOperationClaimService userOperationClaimService)
{
UserOperationClaimService = userOperationClaimService;
}

[HttpPost("add")]
public IActionResult Add(UserOperationClaim userOperationClaim)
{
var result = UserOperationClaimService.Add(userOperationClaim);
if (result.Status)
{
return Ok(result);
}
return BadRequest(result);
}

[HttpDelete("delete")]
public IActionResult Delete(UserOperationClaim userOperationClaim)
{
var result = UserOperationClaimService.Delete(userOperationClaim);
if (result.Status)
{
return Ok(result);
}
return BadRequest(result);
}

[HttpPut("update")]
public IActionResult Update(UserOperationClaim userOperationClaim)
{
var result = UserOperationClaimService.Update(userOperationClaim);
if (result.Status)
{
return Ok(result);
}
return BadRequest(result);
}

[HttpGet("get-user-operation-claims")]
public IActionResult GetUserOperationClaims()
{
var result = UserOperationClaimService.GetUserOperationClaims();
if (result.Status)
{
return Ok(result);
}
return BadRequest(result);
}


}
}
using Business.Abstract;
using Core.Entities.Concrete;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace WebAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class UserOperationClaimsController : ControllerBase
    {
        private IUserOperationClaimService UserOperationClaimService { get; }

        public UserOperationClaimsController(IUserOperationClaimService userOperationClaimService)
        {
            UserOperationClaimService = userOperationClaimService;
        }

        [HttpPost("add")]
        public IActionResult Add(UserOperationClaim userOperationClaim)
        {
            var result = UserOperationClaimService.Add(userOperationClaim);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpDelete("delete")]
        public IActionResult Delete(UserOperationClaim userOperationClaim)
        {
            var result = UserOperationClaimService.Delete(userOperationClaim);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpPut("update")]
        public IActionResult Update(UserOperationClaim  userOperationClaim)
        {
            var result = UserOperationClaimService.Update(userOperationClaim);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpGet("get-user-operation-claims")]
        public IActionResult GetUserOperationClaims()
        {
            var result = UserOperationClaimService.GetUserOperationClaims();
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }


    }
}
using Business.Abstract;
using Core.Entities.Concrete;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace WebAPI.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class UserOperationClaimsController : ControllerBase
    {
        private IUserOperationClaimService UserOperationClaimService { get; }

        public UserOperationClaimsController(IUserOperationClaimService userOperationClaimService)
        {
            UserOperationClaimService = userOperationClaimService;
        }

        [HttpPost("add")]
        public IActionResult Add(UserOperationClaim userOperationClaim)
        {
            var result = UserOperationClaimService.Add(userOperationClaim);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpDelete("delete")]
        public IActionResult Delete(UserOperationClaim userOperationClaim)
        {
            var result = UserOperationClaimService.Delete(userOperationClaim);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpPut("update")]
        public IActionResult Update(UserOperationClaim  userOperationClaim)
        {
            var result = UserOperationClaimService.Update(userOperationClaim);
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }

        [HttpGet("get-user-operation-claims")]
        public IActionResult GetUserOperationClaims()
        {
            var result = UserOperationClaimService.GetUserOperationClaims();
            if (result.Status)
            {
                return Ok(result);
            }
            return BadRequest(result);
        }


    }
}